TODO :
    - (Angular) Ajouter à CompetenceEffect le nombre de cibles maximum, pour le rendre cohérent avec la partie PHP, qui l'a déjà.
    - (Angular) Faire en sorte d'afficher tous les nouveaux champs possibles pour un CompetenceEffect
    - Vérifier et mettre en place la possibilité de gestion automatique de JetDeLave avec effet niveau 3, et BoostCentaure avec effet niveau 3, differerDegats du Nain et châtiment du Sacrieur.
    - (Angular) Display correctly all the Competences created (no matter what personnage it belongs to) and add an interface for the Competence
    - Add the possibility to update/delete Competence.
    - (Angular) Add the possibility to CUD Personnage.
    - (Angular) Provide a better Personnage display possibility. At this time, there are only 9 Personnage, but when the GM will create decade of it, we need to have the possibility to order them.
    - When everything will be clean enough, maybe not delete the competence from competence AND competencelearned, just from competencelearned. But today we need this to not display it again.
	- Move the Description to every effect => 1 Description before the effect, and 1 Description after, in order to uncharge the Competence, and add other elements in it.
	    => Finir de l'implémenter proprement.
    - Implémenter la mort/KO des perso
        => !!! Enlever les effets de redirection de dégâts quand cela arrive !!!
    - Mettre en place les groupe et sous-groupe relatifs au entités, pour pouvoir trier plus aisément les entités.
    - !!! (Angular) Mettre à jouter les différentes parties modifiées (Competence, CompetenceEffect, Personnage, BonusCombat !!!
    - Bien plus tard, mais tenter de mettre en place une nouvelle gestion des équipements, ou au moins des armes, pour faire des armes qui soignent.
    - (PHP & Angular) Gérer les effets de rebonds, à savoir transmettre dans l'utilisation de l'effet l'index de la cible, pour faire les réduction associées.

Probably TODO :
    - Faire des effets liés (avec des cibles partagées). Les "effet cible unique" prennent toujours la première cible (cible 0) dans ce genre de cas,
        si les autres effets liés sont cibles multiples.
        => Effets liés = effets avec cibles partagées.
        => A mettre en place dans CompetenceEffectTest->appliquerEffetCompetenceAvecBonusGeneraux( ...);
        => A mettre en place dans la partie Angular lors de la récupération de la compétence, récupérer les cibles déjà identitfiées,
            définir les effets à appliquer et donc le nombre de cibles à sélectionner.
        => Les CompetenceEffect doivent être dans un ordre hyper spécifique car : On va les récupérer dans l'ordre,
            et récupérer les entités séléctionnées dans l'ordre dans lequel ils sont joués, pour les réattribuer dans le bon ordre,
            et donc attribuer les bonnes cibles aux bons effets.
        => Pour simplifier, si il n'y a aucun effet lié, on transmet une première list de cibles vide. Comme cela,
            on prend toujours la liste en position 0 pour jouer les effet liés, et ensuite les liste des effets dans l'ordre en fonction de leur ordre d'arrivé.
        -> Dans le cas de Jet de Lave, avoir 3 effets liés, dont les deux derniers avec emmagasinement sur N tour :
            Dégâts cible unique, Dégâts 50% cible unique, Dégâts zone
    - Ajouter la possibilité de choisir des effets avec cibles uniquement distinctes (boost du centaure) sur N tours.

    => (Angular) !!! Si il y a des effets liés, vérifier si ce sont des effets cibles uniques, et si plusieurs effets liés sont cibles uniques, alors changer de couleur de bordure !!!



A vérifier :
    - !!! Faire en sorte de déporter les fonctions appliquerEffetCompetenceAvecBonusGeneraux() et useEffect(); !!!

Normaly DID :
	- !!! Modifier "Recieiver" par "Receiver" partout ... !!!
	- Finir implémenter VolDeVie
	- Add Id_Personnage to Arbre table, because the Poo part (the future implementation), is using it to get all the data. (More safe, unuse of string => good method)
	- Add "NumberOfUse", "NumberOfTurn", and "NumberOfFight" to CompetenceEffect to signifiate how long it should last
    - Finir l'implémentation des différents déclanchements et des différentes boucles for pour les 30 cas possibles de déclenchement avant/après.
    - !!! FINIR DE : Implémenter le fait de pouvoir déclencher des effets à la réception de compétence, à la réception d'attaque, et au début/fin de tour  !!!
        => turnEffect.php
        => competenceUse.php
    - Add a new relational table between Personnage and Competence, in order to (at least) store the lvl of the Competence for the Personnage,
        and have the "same" competence for multiple Personnage.

    - !!! Définir si les effets avant/après se déclenchent pour chaque effet, ou seulement sur l'utilisation de la compétence. !!!
        => Les avant/après ne se déclenchent qu'une seule fois par compétence, mais sur chaque cible.

    - Gestion des applicationUse, dans CompetenceEffectTest.
    - Gestion de la redirection de dégats (à la fois dans PersonnageTest->triggerEffectReceivingAction() pour infliger les dégâts au lanceur de la compétence,
        et CompetenceEffectTest->calculateHealWithBonusCombat() pour la réduction des dégâts. Cette redirection ne se fait que sur les dégâts directs).

    - Ajouter la mise en base de donnée dans comepetenceeffectuse des cibles touchées si un des effets de la compétence applicationType > 6
    - Lorsqu'un effet avec applicationType > 6 a eu lieu, supprimer ses cibles de comepetenceeffectuse
    - !! Faire une table qui référence les cibles pour les compétences qui doivent les sauvegarder !!
    - Gestion du cas de cible sois-même
    - Introduce DamageRedirection, and decide if redirection takes into account damageReduction/armor from the initial target, and damageReduction/Armor from redirecting target.
        => Introduce it in CompetenceEffectTest->appliquerEffetCompetenceAvecBonusGeneraux( ... );
    - Ajouter un champs qui spécifie dans combien de temps doit être déclenché l'effet, avec une vérification appropriée.
    - Prendre en compte les dégâts différés.
    - Possiblement prendre en compte des dégâts différés qui augmentent/diminuent. => Se fait à chaque utilisation de l'effet.
    - Mettre à jour competenceUseFinition pour ne déclencher les effets que si c'est le bon type d'action qui est fait (afterDamagesEffect si c'est dégâts, afterHealEffect si c'est heal, etc ...)

    - !!! Faire attention à bien déclencher les bon effets dans PersonnageTest->triggerEffectReceivingCompetence() (seulement les EfffetsAprèsDégâts quand on reçoit des dégâts, etc ...) !!!
    - Rajouter la possibilité de lier un effet avant/après dégâts/soin/bouclier reçu en fonction du montant reçu.
        => Rajouter un booléen, et si ce booléen est actif, on prend dans Effect->_ValueMin la valeur qu'on multiplie directement au montant de CompetenceEffect pour obtenir la valeur à appliquer.
        =>Ne marche que pour les effets de boost, et non pour les effets qui réagissent au dégâts tels que le renvoie, la redirection et le fait de les différer.
            Ni pour les dégâts, dégâts différés, le heal et le shield

Notifier ces implémentation dans un changelog :
	- Le vol de vie est fixé à 20%  : Beaucoup plus simple au niveau implémentatiton, vu que je ne l'avais pas prévu à la base. En effet, cela permet de ne pas rajouter une champ optionnel dans la BDD.
	    Les dégâts redirigés et différés ne l'impactent et le ne diffèrent pas, car ils sont infligés.
	- Tous les effets sont de la forme ''' (valeurInitiale + boostFlat) * (1 + boostPourcentage) '''
	- Ignorer l'armure est de la forme ''' (valeurInitiale * (1 - malusPourcentage)) - malusFlat '''

	- Les effets de dommage et heal laissés sur les personnes par des compétences (tels que des poisons et des heal répétitifs) sont atatchés au lancement.
		Cela veut dire qu'il ne dépendent que de l'état initial du lanceur au moment du lancement du sort, et ne se metteront pas à jours si ses statistiques
		ou son bonusCombat changent.
		=> Dans le RP que nous avions commencé, nous partions du principe que même si un personnage est K.O./meurt, ses boost et malus sur les autres entités restent, intacts.
		=> Donc la magie est détachée du lanceur à partir du moment où elle est lancée. (Sauf pour les redirections de dégâts, une interaction qu'il va falloir implémenter).
		=> Cela permet également de simplifier l'existance des objets renfermant de la magie ou enchantés, et de ne pas passer par l'explication d'un conteneur.
		=> Je n'y pense que bien après, mais cela permet de ne pas différencier dans leur implémentation les poisons/dégâtsPhysiques et les dégâts magiques persistants, du coup.
	- Les effets de dommage laissés sur les personnages passent à travers les amures physiques et magiques.
	- Il n'y a pas d'utilisation des boost magique et armure magiques, car c'est plus simple à gérer dans le RP. Le code peut être updaté relatiement rapidement
		pour le prendre en compte, en cas de nécessité.
	- Quand on précise le nombre d'accumulation nécessaire, c'est à ce nombre d'utilisation qui déclenchera l'effet.
        => Pou JetDeLave : 3 accumulations pour que l'effet se déclence veut dire que j'ai besoin de l'utiliser 2 fois, et à la troisième utilisation, l'effet se déclenche.
        => Donc à l'utilisation en cours. Ce qui veut dire, que je n'ai pas besoin de le valider, étant donné que je suis dans l'effet de la compétence en question.
        => Aurait pu être renomé en quelque chose comme numberOfUseToExec.
    - Les renvois de dégâts ne sont affectés que par les réduction générales de dégâts, et non par l'armure, qu'elle soit physique ou magique.
    - Un effet peut avoir une valeur pour le faire changer en fonction des utilisations (géré dans EffectTest->useEffect()). Ce modificateur est de base à 1, pour ne pas nativement impacter les effets sur le temps.
        => Une des limitations imposées : L'effet ne peut changer de signe. Si il est négatif, il doit rester négatif, ou passera à null si il change pour être positif vause du facteur, et inversement.
        => Une autre : On peut spécifier deux type de facteur : flat et pourcentage. Flat si modificateur (> 1 ou < -1), et pourcentage si modificateur (< 1 et > -1).
            Donc on ne peut multiplier l'effet par 2 ou plus, et on ne peut réduire directement l'effet par 1 ou moins. (mettre 0.99999 pour multiplier par 2, et 1.000001 pour enlever 1, ça devrait marcher).
        => Le facteur de changement de l'effet est constant. Eh oui, il va falloir se débrouiller avec. Mais disons que c'est déjà bien que cette option soit possible.

Technicité :
    - Expliquer clairement le concept d'effets liés, pourquoi il est né et comment il est utilisé.
        => Première réponse : Le concept d'effet liés est venu de la compétence JetDeLave. Cette compétence un soucis : Au bout de 3 effets, elle doit infliger des dégâts supplémentaires à la cible,
            et faire un effet de dégâts de zone autour. Or une seule sélection est possible, en distingant la première cible des autres, et cela permet de ne pas prendre la cible principale dans l'effet de zone.
            L'effet de zone ne s'active que si la cible précédente est sélectionnée.
    - Pour l'instant, pour la redirection de dégâts et la réduction de dégâts, il faut renter une valeur < 1, car elle est directement multipliée.
    - Le renvoie de dégâts et le différage de dégâts sont appliqué de deux manière distinctes.
        Ils sont d'abord déduit des dégâts, et ensuite, ils s'appliquent dans les Personnage->TriggerEffectReceivingCompetence.
        Donc le lanceur voit juste ses dégâts diminués, et le receveur voit juste les effets qui s'activent, mais les deux ne sont pas traités en même temps.
            => Cela oblige à faire les calculs pour l'un comme pour l'autre.




Cas de réflexion :
    Partie PHP :



    Cas Angular :
        entityManagement => Partie de gestion de l'affichage d'état en fonction des CompetenceEffect.
            Vu comment s'est déroulé le développement de la partie PHP, si la compétence a plusieurs effets, il faut faire plusieurs sélections, sauf si les CompetenceEffect sont liés.
                => il faut donc jouer tous les effets liés, puis les autres effets un par un.
            Il faudrait peut-être rajouter un champ de texte en haut pour indiquer quel effet est en train d'être joué, et combien de target peuvent être sélectionnées en précisant l'effet en cours.
            Algorithme :















